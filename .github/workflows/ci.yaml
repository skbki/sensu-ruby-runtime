name: Build Docker Image CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build on ${{ matrix.distro }} ${{ matrix.arch }}
    strategy:
      matrix:
        include:
          - arch: arm64
            distro: ubuntu20.04
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v2
      - name: select platform to test
        id: random_platform
        run: echo ::set-output name=PLATFORM::debian
      - name: Get the version
        id: get_version
        if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: echo settings
        id: echo_settings
        run: "echo platform: ${{ steps.random_platform.outputs.PLATFORM }} version: ${{ steps.get_version.outputs.VERSION }}"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1.2.0
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1.6.0
        with:
          config-inline: |
            [registry."docker.io"]
              mirrors = ["mirror.gcr.io"]
      - name: Login to GitHub Package Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Build and test debian
        if: steps.get_version.outputs.VERSION || github.event_name == 'pull_request' || steps.random_platform.outputs.PLATFORM == 'debian'
        env:
          TAG: ${{ steps.get_version.outputs.VERSION }}
          REPO_SLUG: ${{ github.repository }}
        run: ./build_scripts/build_debian_platforms.sh
      - name: create checksum file
        run: ./checksum.sh
      - name: Release tagged version
        if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
        env:
          TAG: ${{ steps.get_version.outputs.VERSION }}
          REPO_SLUG: ${{ github.repository }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./upload.sh
